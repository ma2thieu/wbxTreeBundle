<script type="text/javascript">
    var wbxtree = {
        elem: null,
        processing_urls: false,
        urls: [],
        
        url_add: '{{ url_add }}',
        url_rename: '{{ url_rename }}',
        url_move: '{{ url_move }}',
        url_delete: '{{ url_delete }}',

        init: function(e) {
            wbxtree.elem = e;

            wbxtree.elem.jstree({
                'core': {
                    'check_callback' : true,
                    'themes': {
                        'name': 'proton',
                        'responsive': true
                    }
                },
                "types" : 
                    {%- if types is defined -%}
                        {{- types | raw -}}
                    {%- else -%}
                        {
                            "default" : {
                                "icon" : false
                            }
                        }
                    {%- endif -%},
                "plugins" : [ "dnd", "state", "types", "wholerow", "unique" ]
            })
            .on("create_node.jstree", function (e, data) {
                console.log("create");
                console.log(data);
                console.log("create node " + data.node.text + " child of " + data.parent + " at position " + data.position);

                var url = wbxtree.url_add
                    .replace("PARENT_ID", data.parent.replace("node_", ""))
                    .replace("POSITION", data.position)
                ;

                wbxtree.freeze();

                $.ajax({
                    type: "POST",
                    url: url,
                    data: {
                        'wbxtree_leaf': {
                            'name': data.node.text
                        }
                    },
                })
                .always(function() {
                    wbxtree.unfreeze();
                })
                .done(function(d) {
                    console.log(d);

                    wbxtree.getRef().set_id(data.node, "node_" + d.id);
                    wbxtree.getRef().edit("node_" + d.id);
                })
                .fail(function(x) {
                    wbxtree.onAjaxFail(x);
                })
                ;
            })
            .on("rename_node.jstree", function (e, data) {
                console.log("rename");
                console.log(data);
                console.log("rename node " + data.old + " -> " + data.text);

                var url = wbxtree.url_rename
                    .replace("ID", data.node.id.replace("node_", ""))
                ;

                wbxtree.freeze();

                $.ajax({
                    type: "POST",
                    url: url,
                    data: {
                        'wbxtree_leaf': {
                            'name': data.text
                        }
                    },
                })
                .always(function() {
                    wbxtree.unfreeze();
                })
                .done(function(d) {
                    console.log(d);
                })
                .fail(function(x) {
                    wbxtree.onAjaxFail(x);
                })
                ;
            })
            .on("move_node.jstree", function (e, data) {
                console.log("move");
                console.log(data);
                console.log(data.node.id + " move to " + data.parent + " at position " + data.position);
    
                var url = wbxtree.url_move
                    .replace("ID", data.node.id.replace("node_", ""))
                    .replace("PARENT_ID", data.parent.replace("node_", ""))
                    .replace("POSITION", data.position)
                ;

                wbxtree.freeze();
                
                wbxtree.getUrl(url);
            })
            .on("delete_node.jstree", function (e, data) {
                console.log("delete");
                console.log(data);
                console.log("delete node " + data.node.id);

                var url = wbxtree.url_delete
                    .replace("ID", data.node.id.replace("node_", ""))
                ;

                wbxtree.freeze();

                $.ajax({
                    type: "POST",
                    url: url,
                    data: {
                        'wbxtree_leaf': {
                            'name': data.text
                        }
                    },
                })
                .always(function() {
                    wbxtree.unfreeze();
                })
                .done(function(d) {
                    console.log(d);
                })
                .fail(function(x) {
                    wbxtree.onAjaxFail(x);
                })
                ;
            })

            wbxtree.elem.parent().children('.wbxtree_menu').find('.btn_add').on("click", function() {
                var sel = wbxtree.getSel();
                sel = sel[0];

                sel = wbxtree.getRef().create_node(sel);
                if (sel) {
                    wbxtree.getRef().edit(sel);
                }
            });

            wbxtree.elem.parent().children('.wbxtree_menu').find('.btn_rename').on("click", function() {
                var sel = wbxtree.getSel();
                sel = sel[0];
                
                wbxtree.getRef().edit(sel);
            });

            wbxtree.elem.parent().children('.wbxtree_menu').find('.btn_delete').on("click", function() {
                if (confirm("Are you sure you want to delete this node and all its children ?")) {
                    var sel = wbxtree.getSel();
                    sel = sel[0];
                
                    wbxtree.getRef().delete_node(sel);
                }
            });

            {% if extra_urls | length > 0 %}
                {% for url in extra_urls %}
                    wbxtree.elem.parent().children('.wbxtree_menu').find('.btn_{{ url.id }}').on("click", function() {
                        var sel = wbxtree.getSel();
                        sel = sel[0];

                        var url = '{{ url.url }}';
                        url = url.replace("ID", sel.replace("node_", ""));

                        window.location = url;
                    });
                {% endfor %}
            {% endif %}

            wbxtree.unfreeze();
        },

        getRef: function() {
            return wbxtree.elem.jstree(true);
        },

        getSel: function() {
            var ref = wbxtree.getRef();
            var sel = ref.get_selected();

            if (!sel.length) { 
                return false; 
            }
            else {
                return sel;
            }
        },

        getUrl: function(url) {
            wbxtree.urls.push(url);
            wbxtree.processUrls();
        },

        processUrls: function() {
            if (wbxtree.urls.length > 0 && wbxtree.processing_urls === false) {
                wbxtree.freeze();

                wbxtree.processing_urls = true;
                var url = wbxtree.urls[0];

                $.ajax({
                    type: "GET",
                    url: url
                })
                .always(function() {
                    wbxtree.unfreeze();
                })
                .done(function(data) {
                    console.log(data);
                    wbxtree.urls.shift();
                    wbxtree.processing_urls = false;
                    wbxtree.processUrls();
                })
                .fail(function(x) {
                    wbxtree.onAjaxFail(x);
                })
                ;
            }
            else {
                return;
            }
        },

        onAjaxFail: function(x) {
            console.log(x);
            alert("An error has occured, please wait for the page to reload : \nError : " + (x.hasOwnProperty('responseJSON') ? x.responseJSON.message : x.statusText));
            location.reload();
        },

        freeze: function() {
            wbxtree.elem.parent().children('.wbxtree_loading').show();
        },

        unfreeze: function() {
            wbxtree.elem.parent().children('.wbxtree_loading').hide();
        }
    };

    $(document).ready(function() {
        wbxtree.init($('.wbxtree_tree'));
    });

</script>
